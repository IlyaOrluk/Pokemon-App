{"version":3,"sources":["img/logo.png","components/header/index.js","components/header/header.js","components/pages/home-page.js","components/store-service-context/store-service-context.js","components/hoc/with-store-service.js","utils/compose.js","components/item-details/item-details.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/spinner/index.js","components/spinner/spinner.js","components/item-details/item-details-container.js","components/item-details/index.js","components/poke-components/pokemon-species.js","actions/index.js","components/poke-components/pokemon-evolutions.js","components/pages/pokemon-page.js","components/item-list/item-list.js","components/pagination/pagination.js","components/item-list/index.js","components/item-list/item-list-container.js","components/pages/pokemon-list.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/pokemon-list.js","reducers/pokemon-details.js","reducers/pokemon-species.js","reducers/pokemon-evolution.js","reducers/index.js","store.js","index.js","services/store-service.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Link","to","src","logo","alt","HomePage","React","createContext","StoreServiceProvider","Provider","StoreServiceConsumer","Consumer","withStoreService","Wrapped","props","storeService","Object","assign","compose","_len","arguments","length","funcs","Array","_key","comp","reduceRight","wrapped","f","ItemDetails","_ref","item","objectWithoutProperties","name","img","base_exp","frontImage","front","backImage","back","Fragment","Children","map","children","child","cloneElement","stats","id","progresStyle","width","concat","stat","background","key","style","ErrorIndicator","Spinner","Detail","field","label","itemTag","ItemDetailsContainer","this","fetchItem","fetchItemValue","prevProps","_this$props","loading","error","components_spinner","components_error_indicator","item_details_item_details","item_details_container_Detail","Component","PokemonSpecies","speciesUrl","fetchPokemonSpecies","_this$props$species","species","genus","color","growh_rate","habitat","shape","varieties","connect","_ref$pokemonSpecies","pokemonSpecies","dispatch","_ref2","pokemon","service","type","getPokemonSpecies","then","res","payload","catch","err","PokemonEvolutions","url","console","log","fetchPokemonEvolutions","_ref$pokemonEvolution","pokemonEvolutions","evolutions","getPokemonEvolutionChain","_ref2$pokemonDetails","pokemonDetails","_ref3","getPokemon","evolution_chain","components_item_details","poke_components_pokemon_species","pokemon_evolutions","ItemList","items","pageRouterSelected","listCount","onError","idx","pokemonId","LEFT_PAGE","RIGHT_PAGE","range","from","step","undefined","i","push","Pagination","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","gotoPage","page","_this$props$onPageCha","onPageChanged","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","_props$totalRecords","_props$pageLimit","_props$pageNeighbours","ceil","_this2","react","aria-label","index","onClick","ItemListContainer","fetchItems","_this$props2","_this$props3","itemsCount","item_list_item_list","pagination","_ref2$pokemonsList","pokemonsList","pageSelected","pageNumber","getPokemonList","onImageError","components_item_list","clear","App","role","components_header","Switch","Route","path","component","exact","render","match","params","pokemon_page","pokemon_list","Number","ErrorBoundry","state","hasError","updatePokemonsList","action","slice","updatePokemonDetails","updatePokemonSpecies","updatePokemonEvolutions","reducer","store","createStore","applyMiddleware","thunk","DATA","_apiBase","getResource","axios","get","_callee","limit","regenerator_default","wrap","_context","prev","next","sent","abrupt","data","results","parcePokemons","stop","_callee2","_context2","parcePokemon","_callee3","_context3","parcePokemonSpecies","_callee4","_context4","parcePokemonEvolutions","getPokemonImage","_extractId","abilities","types","forEach","ability","base_stat","sprites","front_default","back_default","weight","height","base_experience","growth_rate","genera","levelTwoEvoArr","chain","evolves_to","levelTrhee","levelOne","levelTwo","ReactDOM","es","error_boundry","value","HashRouter","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.3f931c9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.023d617a.png\";","import Header from './header';\n\nexport default Header;","import React from 'react';\nimport './header.css';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../img/logo.png';\n\nconst Header = () => {\n  return (\n    <header className=\"header row\">\n      <Link to=\"/#\"><img className='header-logo' src={logo} alt='logo'></img></Link>\n    </header>\n  );\n};\n\n\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './home-page.css';\n\nconst HomePage = () => {\n  return (\n    <div className='home-page'>\n      <Link to=\"/pokemons/1/\">\n        <div className='browse-btn'>\n          <span>Browse®</span>\n        </div>\n      </Link >\n    </div>\n\n\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst {\n  Provider: StoreServiceProvider,\n  Consumer: StoreServiceConsumer\n} = React.createContext();\n\nexport {\n  StoreServiceProvider,\n  StoreServiceConsumer\n};\n","import React from 'react';\nimport { StoreServiceConsumer } from '../store-service-context/';\n\nconst withStoreService = () => (Wrapped) => {\n\n  return (props) => {\n    return (\n      <StoreServiceConsumer>\n        {\n          (storeService) => {\n            return (<Wrapped {...props}\n              storeService={storeService} />);\n          }\n        }\n      </StoreServiceConsumer>\n    );\n  }\n};\n\nexport default withStoreService;\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import React from 'react';\nimport './item-details.css';\n\n\nconst ItemDetails = ({ item, ...props }) => {\n    const { name, img, base_exp } = item;\n    const frontImage = img.front ? <img src={img.front} alt={name} /> : <img src='https://pokemon-visualguide.com/assets/img/pokeball.png' alt={name} />;\n    const backImage = img.back ? <img src={img.back} alt={name} /> : null;\n    return (\n        <React.Fragment>\n            <h4>{name}</h4>\n            <div className='preview-item'>\n                <div className='item-details-images'>\n                    {frontImage}\n                    {backImage}\n                    <span className='base-exp'>{base_exp}xp</span>\n                </div>\n                <div className='item-details'>\n                    {\n                        React.Children.map(props.children, (child) => {\n                            return React.cloneElement(child, { item });\n                        })\n                    }\n                </div>\n            </div>\n            <div className='item-details-stats'>\n            <h5>Base stats:</h5>\n                {\n                    item.stats.map((item, id) => {\n                        const progresStyle = {\n                            width: `${item.stat / 10}vh`,\n                            background: `rgba(${item.stat}, 150, 50, 1)`\n                        };\n                        return (\n                            <React.Fragment key={id}>\n                                <span >{item.name}: {item.stat}</span>\n                                <div className='stats-bar'>\n                                    <div className='stats-bar-progress' style={progresStyle}></div>\n                                </div>\n                            </React.Fragment>\n                        )\n                    })\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default ItemDetails;","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return <div>404 not found!</div>;\n};\n\nexport default ErrorIndicator;\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return <div>loading...</div>;\n};\n\nexport default Spinner;\n","import React from 'react';\r\n\r\nimport ItemDetails from './item-details';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport Spinner from '../spinner';\r\n\r\n\r\nconst Detail = ({ item, field, label, itemTag }) => {\r\n    return (\r\n        React.createElement(itemTag, null, `${label} ${item[field]}`)\r\n    );\r\n};\r\n\r\nclass ItemDetailsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchItem(this.props.fetchItemValue);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.fetchItemValue !== prevProps.fetchItemValue) {\r\n            this.props.fetchItem(this.props.fetchItemValue)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { item, loading, error } = this.props;\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ItemDetails\r\n                    item={item}>\r\n                    <Detail itemTag='span' label='Weight: ' field='weight' />\r\n                    <Detail itemTag='span' label='Height: ' field='height' />\r\n                    <Detail itemTag='span' label='Abilities: ' field='abilities' />\r\n                    <Detail itemTag='span' label='Type(s): ' field='types' />\r\n                </ItemDetails>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemDetailsContainer;","import ItemDetailsContainer from './item-details-container';\n\nexport default ItemDetailsContainer;\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { withStoreService } from '../hoc';\r\nimport { fetchPokemonSpecies } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\nimport ErrorIndicator from '../error-indicator';\r\nimport Spinner from '../spinner';\r\n\r\nimport './pokemon-species.css'\r\n\r\nclass PokemonSpecies extends React.Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.speciesUrl !== prevProps.speciesUrl) {\r\n            this.props.fetchPokemonSpecies(this.props.speciesUrl)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { species: { name, genus, color, growh_rate, habitat, shape, varieties } } = this.props;\r\n\r\n        if (this.props.loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        if (this.props.error) {\r\n            return <h1>No information...</h1>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h2>Pokemon Species</h2>\r\n                <div className='pokemon-species'>\r\n                    <div className='species-category'>\r\n                        <h3>Name:</h3>\r\n                        <span>{name}</span>\r\n                    </div>\r\n                    <div className='species-category'>\r\n                        <h3>Genus:</h3>\r\n                        <span>{genus}</span>\r\n                    </div>\r\n                    <div className='species-category'>\r\n                        <h3>Color:</h3>\r\n                        <span>{color}</span>\r\n                    </div>\r\n                    <div className='species-category'>\r\n                        <h3>Growh Rate:</h3>\r\n                        <span>{growh_rate}</span>\r\n                    </div>\r\n                    <div className='species-category'>\r\n                        <h3>Habitat:</h3>\r\n                        <span>{habitat}</span>\r\n                    </div>\r\n                    <div className='species-category'>\r\n                        <h3>Shape:</h3>\r\n                        <span>{shape}</span>\r\n                    </div>\r\n                    <div className='species-category'>\r\n                        <h3>Varieties:</h3>\r\n                        {\r\n                            varieties.map((item, id)=>{\r\n                            return <Link key={id} to={`/pokemon/${item}`}>{item}</Link>\r\n                            \r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ pokemonSpecies: { species, loading, error } }) => {\r\n    return { species, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { storeService }) => {\r\n    return {\r\n        fetchPokemonSpecies: (pokemon) => dispatch(fetchPokemonSpecies(storeService)(pokemon))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withStoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(PokemonSpecies);","// [request_type]_[object]_[action]\nconst itemsLoaded = (newItem) => { \n  return {\n    type: 'FETCH_ITEMS_SUCCESS',\n    payload: newItem\n  };\n};\n\nconst itemsRequested = () => {\n  return {\n    type: 'FETCH_ITEMS_REQUEST'\n  };\n};\n\nconst itemsError = (error) => {\n  return {\n    type: 'FETCH_ITEMS_FAILURE',\n    payload: error\n  };\n};\n\nconst itemLoaded = (newItem) => { \n  return {\n    type: 'FETCH_ITEM_SUCCESS',\n    payload: newItem\n  };\n};\n\nconst itemRequested = () => {\n  return {\n    type: 'FETCH_ITEM_REQUEST'\n  };\n};\n\nconst itemError = (error) => {\n  return {\n    type: 'FETCH_ITEM_FAILURE',\n    payload: error\n  };\n};\n\nconst speciesLoaded = (species) => { \n  return {\n    type: 'FETCH_SPECIES_SUCCESS',\n    payload: species\n  };\n};\n\nconst speciesRequested = () => {\n  return {\n    type: 'FETCH_SPECIES_REQUEST'\n  };\n};\n\nconst speciesError = (error) => {\n  return {\n    type: 'FETCH_SPECIES_FAILURE',\n    payload: error\n  };\n};\n\nconst evolutionsLoaded = (species) => { \n  return {\n    type: 'FETCH_EVOLUTIONS_SUCCESS',\n    payload: species\n  };\n};\n\nconst evolutionsRequested = () => {\n  return {\n    type: 'FETCH_EVOLUTIONS_REQUEST'\n  };\n};\n\nconst evolutionsError = (error) => {\n  return {\n    type: 'FETCH_EVOLUTIONS_FAILURE',\n    payload: error\n  };\n};\n\nconst onImageError = (id) => {\n  return {\n    type: 'ITEM_IMAGE_ERROR',\n    payload: id\n  }\n}\n\n// [request_type]_[object]_[action]\n\n\n\nconst fetchItems = (service) => (pageNumber, listCount) => (dispatch) => {\n  dispatch(itemsRequested());\n  service.getPokemonList(pageNumber, listCount)\n    .then((res) => dispatch(itemsLoaded(res)))\n    .catch((err) => dispatch(itemsError(err)));\n};\n\nconst fetchItem = (service) => (pokemon) => (dispatch) => {\n  dispatch(itemRequested());\n  service.getPokemon(pokemon)\n    .then((res) => dispatch(itemLoaded(res)))\n    .catch((err) => dispatch(itemError(err)));\n};\n\nconst fetchPokemonSpecies = (service) => (pokemon) => (dispatch) => {\n  dispatch(speciesRequested());\n  service.getPokemonSpecies(pokemon)\n    .then((res) => dispatch(speciesLoaded(res)))\n    .catch((err) => dispatch(speciesError(err)));\n};\n\nconst fetchPokemonEvolutions = (service) => (pokemon) => (dispatch) => {\n  dispatch(evolutionsRequested());\n  service.getPokemonEvolutionChain(pokemon)\n    .then((res) => dispatch(evolutionsLoaded(res)))\n    .catch((err) => dispatch(evolutionsError(err)));\n};\n\nexport {\n  fetchItems,\n  fetchItem,\n  fetchPokemonSpecies,\n  fetchPokemonEvolutions,\n  onImageError\n};\n","import React from 'react';\r\n\r\n// import { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { withStoreService } from '../hoc';\r\nimport { fetchPokemonEvolutions } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\n\r\nclass PokemonEvolutions extends React.Component {\r\n\r\n    // componentDidMount() {\r\n    //     console.log(this.props.url)\r\n    //     this.props.fetchPokemonEvolutions(this.props.url)\r\n    // }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.url !== prevProps.url) {\r\n            console.log(this.props.url)\r\n            this.props.fetchPokemonEvolutions(this.props.url)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2>Pokemon Evolutions</h2>\r\n                <div className='pokemon-evolutions'>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({ pokemonEvolutions: { evolutions, loading, error } }) => {\r\n    return { evolutions, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { storeService }) => {\r\n    return {\r\n        fetchPokemonEvolutions: (pokemon) => dispatch(fetchPokemonEvolutions(storeService)(pokemon))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withStoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(PokemonEvolutions);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStoreService } from '../hoc';\r\nimport { fetchItem } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\nimport ItemDetailsContainer from '../item-details';\r\nimport { PokemonSpecies, PokemonEvolutions } from '../poke-components';\r\n\r\nconst PokemonPage = ({ item, loading, error, fetchItem, pokemon, species }) => {\r\n    console.log(species.evolution_chain)\r\n    return (\r\n        <div className='preview-item-box'>\r\n            <ItemDetailsContainer\r\n                fetchItemValue={pokemon}\r\n                fetchItem={fetchItem}\r\n                error={error}\r\n                loading={loading}\r\n                item={item} />\r\n                <PokemonSpecies speciesUrl={item.species}/>\r\n                <PokemonEvolutions url={species.evolution_chain}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ pokemonDetails: { item, loading, error }, pokemonSpecies: { species }}) => {\r\n    return { item, loading, error, species };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { storeService }) => {\r\n    return {\r\n        fetchItem: (pokemon) => dispatch(fetchItem(storeService)(pokemon))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withStoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(PokemonPage);\r\n","import React from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport './item-list.css';\n\nconst ItemList = ({ items, pageRouterSelected, listCount, onError }) => {\n  return (\n    <div className=\"item-list\">\n      {\n        items.map((item, idx) => {\n          let pokemonId = idx + 1 + (pageRouterSelected * listCount);\n\n\n          return (\n            <Link key={idx} className=\"show-item\" to={`/pokemon/${item.name}`}>\n              <img src={item.img} onError={() => onError(idx)} alt={pokemonId}></img>\n              <span>{item.name}</span>\n            </Link>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ItemList;\n\n// `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n    this.pageNeighbours =\r\n      typeof pageNeighbours === \"number\"\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  };\r\n\r\n  handleClick = (page) => {\r\n    this.gotoPage(page);\r\n  };\r\n\r\n  handleMoveLeft = () => {\r\n    this.gotoPage(this.props.currentPage - this.pageNeighbours * 2 - 1);\r\n  };\r\n\r\n  handleMoveRight = () => {\r\n    this.gotoPage(this.props.currentPage + this.pageNeighbours * 2 + 1);\r\n  };\r\n\r\n  fetchPageNumbers = () => {\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.props.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    const totalNumbers = this.pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  render() {\r\n    if (!this.totalRecords) return null;\r\n\r\n    if (this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.props;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"Countries Pagination\">\r\n          <ul className=\"pagination\">\r\n            {pages.map((page, index) => {\r\n              if (page === LEFT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to={`/pokemons/${this.props.currentPage-1}/`}\r\n                      aria-label=\"Previous\"\r\n                    >\r\n                      <i className=\"fas fa-caret-left\"></i>\r\n                    </Link>\r\n                  </li>\r\n                );\r\n\r\n              if (page === RIGHT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to={`/pokemons/${this.props.currentPage+1}/`}\r\n                      aria-label=\"Next\"\r\n                    >\r\n                      <i className=\"fas fa-caret-right\"></i>\r\n                    </Link>\r\n                  </li>\r\n                );\r\n\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={`page-item${\r\n                    currentPage === page ? \" active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <Link\r\n                    className=\"page-link\"\r\n                    to={`/pokemons/${page}/`}\r\n                    onClick={() => this.handleClick(page)}\r\n                  >\r\n                    {page}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import ItemListContainer from './item-list-container';\n\nexport default ItemListContainer;\n","import React from 'react';\r\nimport ItemList from './item-list';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport Spinner from '../spinner';\r\nimport Pagination from '../pagination/pagination';\r\n\r\nclass ItemListContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n      const { pageRouterSelected, listCount } = this.props;\r\n      this.props.fetchItems(pageRouterSelected * listCount, listCount);\r\n    }\r\n  \r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.pageRouterSelected !== prevProps.pageRouterSelected) {\r\n        const { pageRouterSelected, listCount } = this.props;\r\n        this.props.fetchItems(pageRouterSelected * listCount, listCount);\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      const { items, loading, error, listCount, itemsCount, pageRouterSelected, onError } = this.props;\r\n      if (loading) {\r\n        return <Spinner />\r\n      }\r\n  \r\n      if (error) {\r\n        return <ErrorIndicator />\r\n      }\r\n  \r\n      return (\r\n        <React.Fragment>\r\n          <ItemList\r\n            onError={onError}\r\n            listCount={listCount}\r\n            pageRouterSelected={pageRouterSelected}\r\n            items={items} />\r\n          <Pagination totalRecords={itemsCount} pageLimit={listCount} pageNeighbours={1} onPageChanged={() => {}} currentPage={pageRouterSelected + 1} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default ItemListContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStoreService } from '../hoc';\r\nimport { fetchItems, onImageError } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\nimport ItemListContainer from '../item-list';\r\n\r\nconst PokemonList = ({ items, pageRouterSelected, fetchItems, listCount, itemsCount, loading, error, onImageError }) => {\r\n\r\n  const onError = (id) => {\r\n    onImageError(id);\r\n    console.clear();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ItemListContainer\r\n          onError={onError}\r\n          fetchItems={fetchItems}\r\n          pageRouterSelected={pageRouterSelected}\r\n          error={error}\r\n          loading={loading}\r\n          itemsCount={itemsCount}\r\n          listCount={listCount}\r\n          items={items} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ pokemonsList: { items, pageSelected, listCount, itemsCount, loading, error } }) => {\r\n  return { items, pageSelected, listCount, itemsCount, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { storeService }) => {\r\n  return {\r\n    fetchItems: (pageSelected, listCount) => dispatch(fetchItems(storeService)(pageSelected, listCount)),\r\n    onImageError: (id) => dispatch(onImageError(id))\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withStoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(PokemonList);\r\n\r\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from '../header';\nimport { HomePage, PokemonPage, PokemonList  } from '../pages';\n\n\nimport './app.css';\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"container\">\n      <Header />\n      <Switch>\n        <Route\n          path=\"/\"\n          component={HomePage}\n          exact />\n        <Route path=\"/pokemon/:name\"\n          render={({ match }) => {\n            const { name } = match.params;\n            return <PokemonPage pokemon={name} />\n          }} exact />\n        <Route path=\"/pokemons/:id\"\n          render={({ match }) => {\n            const { id } = match.params;\n            return <PokemonList pageRouterSelected={Number(id-1)} />\n          }} exact />\n      </Switch>\n    </main>\n  );\n};\n\n\n\nexport default App;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}","const updatePokemonsList = (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      items: [],\r\n      listCount: 30,\r\n      itemsCount: 964,\r\n      loading: true,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  const noImage = 'https://pokemon-visualguide.com/assets/img/pokeball.png';\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_ITEMS_REQUEST':\r\n      return {\r\n        items: [],\r\n        listCount: state.pokemonsList.listCount,\r\n        itemsCount: state.pokemonsList.itemsCount,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_ITEMS_SUCCESS':\r\n      return {\r\n        items: action.payload,\r\n        listCount: state.pokemonsList.listCount,\r\n        itemsCount: state.pokemonsList.itemsCount,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_ITEMS_FAILURE':\r\n      return {\r\n        items: [],\r\n        listCount: state.pokemonsList.listCount,\r\n        itemsCount: state.pokemonsList.itemsCount,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case 'ITEM_IMAGE_ERROR':\r\n      return {\r\n        items: [\r\n          ...state.pokemonsList.items.slice(0, action.payload),\r\n          { name: state.pokemonsList.items[action.payload].name , img: noImage },\r\n          ...state.pokemonsList.items.slice(action.payload + 1)\r\n        ],\r\n        listCount: state.pokemonsList.listCount,\r\n        itemsCount: state.pokemonsList.itemsCount,\r\n        loading: false,\r\n        error: null\r\n      }\r\n\r\n    default:\r\n      return state.pokemonsList;\r\n  }\r\n};\r\n\r\nexport default updatePokemonsList;","const updatePokemonDetails = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n      return {\r\n        item: [],\r\n        loading: true,\r\n        error: null\r\n      };\r\n    }\r\n  \r\n    switch (action.type) {\r\n      case 'FETCH_ITEM_REQUEST':\r\n        return {\r\n          item: [],\r\n          loading: true,\r\n          error: null\r\n        };\r\n  \r\n      case 'FETCH_ITEM_SUCCESS':\r\n        return {\r\n          item: action.payload,\r\n          loading: false,\r\n          error: null\r\n        };\r\n  \r\n      case 'FETCH_ITEM_FAILURE':\r\n        return {\r\n          item: [],\r\n          loading: false,\r\n          error: action.payload\r\n        };\r\n  \r\n      default:\r\n        return state.pokemonDetails;\r\n    }\r\n  };\r\n  \r\n  export default updatePokemonDetails;","const updatePokemonSpecies = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            species: [],\r\n            loading: true,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_SPECIES_REQUEST':\r\n            return {\r\n                species: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_SPECIES_SUCCESS':\r\n            return {\r\n                species: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_SPECIES_FAILURE':\r\n            return {\r\n                species: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state.pokemonSpecies;\r\n    }\r\n};\r\n\r\nexport default updatePokemonSpecies;","const updatePokemonEvolutions = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            evolutions: [],\r\n            loading: true,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_EVOLUTIONS_REQUEST':\r\n            return {\r\n                evolutions: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_EVOLUTIONS_SUCCESS':\r\n            return {\r\n                evolutions: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_EVOLUTIONS_FAILURE':\r\n            return {\r\n                evolutions: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state.pokemonEvolutions;\r\n    }\r\n};\r\n\r\nexport default updatePokemonEvolutions;","import updatePokemonsList from './pokemon-list';\nimport updatePokemonDetails from './pokemon-details';\nimport updatePokemonSpecies from './pokemon-species';\nimport updatePokemonEvolutions from './pokemon-evolution';\n\nconst reducer = (state, action) => {\n  return {\n    pokemonsList: updatePokemonsList(state, action),\n    pokemonDetails: updatePokemonDetails(state, action),\n    pokemonSpecies: updatePokemonSpecies(state, action),\n    pokemonEvolutions: updatePokemonEvolutions(state, action)\n  };\n};\n\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './reducers';\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(thunk)\n  );\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport storeService from './services/store-service';\nimport { StoreServiceProvider } from './components/store-service-context';\n\nimport store from './store';\n\nconst DATA = new storeService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <StoreServiceProvider value={DATA}>\n        <Router>\n          <App />\n        </Router>\n      </StoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('app')\n);","import axios from 'axios';\nexport default class storeService {\n\n  _apiBase = 'https://pokeapi.co/api/v2';\n\n  getResource = (url) => {\n    const res = axios.get(`${this._apiBase}${url}`);\n    return res;\n  };\n\n  getPokemonList = async (page, limit) => {\n    const res = await this.getResource(`/pokemon/?offset=${page}&limit=${limit}`);\n    return res.data.results.map(this.parcePokemons);\n  };\n\n  getPokemon = async (pokemon) => {\n    const res = await this.getResource(`/pokemon/${pokemon}/`);\n    console.log(this.parcePokemon(res.data))\n    return this.parcePokemon(res.data);\n  };\n\n  getPokemonSpecies = async (url) => {\n    const res = await axios.get(url);\n    console.log(res.data)\n    return this.parcePokemonSpecies(res.data);\n  };\n\n  getPokemonEvolutionChain = async (url) => {\n    const res = await axios.get(url);\n    console.log(res.data)\n    console.log(this.parcePokemonEvolutions(res.data))\n    return res.data;\n  };\n\n  getPokemonImage = (id) => {\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\n  };\n\n  _extractId = (item) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n};\n\n\n  parcePokemons = (items) => {\n    const id = this._extractId(items);\n    return {\n      name: items.name,\n      img: this.getPokemonImage(id)\n    }\n  }\n\n  parcePokemon = (item) => {\n    let abilities = [], types = [], stats = [];\n    item.abilities.forEach((item) => {\n      abilities.push(item.ability.name)\n    })\n    item.types.forEach((item) => {\n      types.push(item.type.name)\n    })\n    item.stats.forEach((item) => {\n      stats.push({\n        name: item.stat.name,\n        stat: item.base_stat\n      })\n    })\n    return {\n      name: item.name,\n      img: {\n        front: item.sprites.front_default,\n        back: item.sprites.back_default,\n      },\n      weight: item.weight/10+'kg',\n      height: item.height/10+'m',\n      base_exp: item.base_experience,\n      abilities: abilities,\n      types: types,\n      stats: stats,\n      species: item.species.url\n    }\n  }\n\n  parcePokemonSpecies = (item) => {\n    let varieties = [];\n    item.varieties.forEach((item) => {\n      varieties.push(item.pokemon.name)\n    })\n    return {\n      name: item.name,\n      color: item.color.name,\n      habitat: item.habitat.name,\n      shape: item.shape.name,\n      growh_rate: item.growth_rate.name,\n      varieties: varieties,\n      genus: item.genera[2].genus,\n      evolution_chain: item.evolution_chain.url\n    }\n  }\n\n  parcePokemonEvolutions = (item) => {\n    let levelTwoEvoArr = [];\n    item.chain.evolves_to.forEach((item) => {\n      levelTwoEvoArr.push({\n        name: item.species.name,\n        img: '',\n        levelTrhee: {\n          name: item.evolves_to[0].species.name,\n          img: ''\n        }\n      })\n    })\n    return {\n      chain: {\n        levelOne: {\n          name: item.chain.species.name,\n          img: ''\n        },\n        levelTwo: levelTwoEvoArr,\n      }\n\n    }\n  }\n}\n\n// https://pokeapi.co/api/v2/pokemon/?limit=964"],"sourceRoot":""}